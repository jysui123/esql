SELECT * FROM test0
SELECT * FROM test0 ORDER BY colE, colD DESC LIMIT 10
SELECT * FROM test0 WHERE colB = 'ab'
SELECT * FROM test0 WHERE colD = 10
SELECT * FROM test0 WHERE ( NOT colD = 10)
SELECT * FROM test0 WHERE ( NOT (colD = 10))
SELECT * FROM test0 WHERE colD != 10 ORDER BY colD ASC LIMIT 14
SELECT * FROM test0 WHERE ( NOT colD != 10)
SELECT * FROM test0 WHERE ((colD != 10))
SELECT * FROM test0 WHERE colB = 'ab' AND ExecutionTime = 2016 AND colB = 'ab'
SELECT * FROM test0 WHERE colB = 'ab' OR colD = 10
SELECT * FROM test0 WHERE colD != 10 AND colB = 'bc' OR colB = 'ab'
SELECT * FROM test0 WHERE colD != 10 AND NOT colB = 'bc' OR NOT (colB = 'ab' AND NOT colE < 10)
SELECT * FROM test0 WHERE colD != 10 AND (colB = 'bc' OR colB = 'ab')
SELECT * FROM test0 WHERE (colD != 10 AND colB = 'bc') OR colB = 'ab'
SELECT * FROM test0 WHERE ((colD != 10) AND (colB = 'bc' OR colB = 'ab'))
SELECT * FROM test0 WHERE NOT colD != 10 ORDER BY colE DESC, colD DESC
SELECT * FROM test0 WHERE NOT NOT colD != 10
SELECT * FROM test0 WHERE NOT NOT NOT colD != 10 ORDER BY colE, colD ASC
SELECT * FROM test0 WHERE NOT colD != 10 AND colB = 'bc' OR colB = 'ab'
SELECT * FROM test0 WHERE colD != 10 AND NOT (colB = 'bc' OR colB = 'ab')
SELECT * FROM test0 WHERE (colD != 10 AND colB = 'bc') OR NOT colB = 'ab'
SELECT * FROM test0 WHERE NOT ((colD != 10) AND (NOT colB = 'bc' OR colB = 'ab'))
SELECT * FROM test0 WHERE colE > 3 AND colD <= 15
SELECT * FROM test0 WHERE colE < 5 OR colD >= 17 ORDER BY colE DESC, colD ASC
SELECT * FROM test0 WHERE NOT (colE >= 5 AND colD < 17)
SELECT * FROM test0 WHERE NOT colE >= 5 AND colD < 17
SELECT * FROM test0 WHERE colE <= 9 OR colD >= 6
SELECT * FROM test0 WHERE NOT (colE > 9 AND colD < 6)
SELECT * FROM test0 WHERE colE > 0 OR colD <= 21.000
SELECT colC FROM test0 WHERE ExecutionTime IS NULL ORDER BY colD
SELECT * FROM test0 WHERE colB IS NOT NULL ORDER BY colE
SELECT * FROM test0 WHERE ExecutionTime IS NULL AND colD IS NOT NULL
SELECT * FROM test0 WHERE NOT ExecutionTime IS NULL OR colD IS NOT NULL
SELECT * FROM test0 WHERE colB = 'ab' AND (ExecutionTime IS NULL OR colD IS NOT NULL)
SELECT * FROM test0 WHERE NOT ExecutionTime IS NULL
SELECT * FROM test0 WHERE NOT ExecutionTime IS NOT NULL
SELECT ExecutionTime FROM test0 WHERE NOT colE BETWEEN 4 AND 15
SELECT * FROM test0 WHERE colE BETWEEN 3 AND 12
SELECT * FROM test0 WHERE NOT colE BETWEEN 3 AND 15 AND colD < 9 OR NOT colB != 'aa'
SELECT colA FROM test0 WHERE colB IN ('aa', 'ab', 'bb')
SELECT ExecutionTime FROM test0 WHERE colB NOT IN ('ab', 'bb') AND ExecutionTime IS NOT NULL
SELECT * FROM test0 WHERE colB NOT IN ('ab', 'bb') AND NOT (colE > 8 OR NOT colD <> 10)
SELECT colB FROM test0 GROUP BY colB ORDER BY colB
SELECT colB, colA FROM test0 GROUP BY colB, colB, colA, colA
SELECT colB FROM test0 WHERE colE > 6 and ExecutionTime IS NOT NULL GROUP BY colB
SELECT * FROM test0 WHERE colC REGEXP '[ab]{3} a{2}[ab] b+'
SELECT * FROM test0 WHERE colB LIKE '_a_' OR colB LIKE 'b%'
SELECT colB, colA FROM test0 GROUP BY colB, colA
SELECT COUNT(DISTINCT colB) FROM test0
SELECT COUNT(DISTINCT colB), COUNT(colB) FROM test0
SELECT COUNT(DISTINCT colB), COUNT(colB), COUNT(DISTINCT colB), COUNT(colB) FROM test0
SELECT COUNT(colA), COUNT(colB) FROM test0
SELECT COUNT(*), COUNT(colB) FROM test0
SELECT COUNT(DISTINCT colB), AVG(colE) FROM test0
SELECT COUNT(*) FROM test0
SELECT COUNT(colB) FROM test0
SELECT MIN(colE) FROM test0
SELECT COUNT(colB), AVG(colD), MAX(colE) FROM test0
SELECT AVG(colE) FROM test0 GROUP BY colB
SELECT AVG(colE), COUNT(*), colB FROM test0 GROUP BY colB, colA
SELECT AVG(colE), COUNT(ExecutionTime) FROM test0 GROUP BY colB, colA
SELECT AVG(colE), COUNT(colA) FROM test0 GROUP BY colB, colA
SELECT COUNT(DISTINCT colE) FROM test0 GROUP BY colB, colA
SELECT MAX(colD), AVG(colE), COUNT(colA) FROM test0 GROUP BY colB, colA
SELECT MAX(colD), AVG(colE), COUNT(colA) FROM test0 WHERE ExecutionTime IS NOT NULL GROUP BY colB, colA
SELECT MAX(colD), AVG(colE), MIN(colD) FROM test0 WHERE ExecutionTime IS NOT NULL AND NOT colD < 2 GROUP BY colB, colA
SELECT MAX(colD), AVG(colE), MIN(colD) FROM test0 WHERE colE > 1 GROUP BY colB, colA
SELECT AVG(colE) FROM test0 GROUP BY colB ORDER BY AVG(colE)
SELECT AVG(colE) FROM test0 GROUP BY colB ORDER BY AVG(colE) DESC
SELECT AVG(colE) FROM test0 GROUP BY colB ORDER BY AVG(colE) ASC
SELECT AVG(colE) FROM test0 GROUP BY colB ORDER BY COUNT(*) ASC
SELECT AVG(colE) FROM test0 GROUP BY colB ORDER BY COUNT(colA) ASC
SELECT AVG(colE) FROM test0 GROUP BY colB ORDER BY COUNT(colA) ASC, COUNT(colA) ASC
SELECT AVG(colE) FROM test0 GROUP BY colB ORDER BY COUNT(DISTINCT colA) DESC
SELECT AVG(colE) FROM test0 GROUP BY colB ORDER BY COUNT(DISTINCT colA) DESC, COUNT(colA), COUNT(*) DESC
SELECT AVG(colE), COUNT(colE), COUNT(DISTINCT colE) FROM test0 GROUP BY colB ORDER BY COUNT(colE), COUNT(DISTINCT colE) ASC
SELECT COUNT(DISTINCT colA) FROM test0 GROUP BY colB ORDER BY COUNT(colA), COUNT(*), COUNT(DISTINCT colA)
SELECT AVG(colE) FROM test0 GROUP BY colB HAVING MAX(colD) > 4
SELECT AVG(colE) FROM test0 GROUP BY colB HAVING COUNT(colD) > 4
SELECT AVG(colE) FROM test0 GROUP BY colB HAVING COUNT(*) > 4
SELECT AVG(colE) FROM test0 GROUP BY colB HAVING COUNT(DISTINCT colA) > 2
SELECT AVG(colE) FROM test0 GROUP BY colB HAVING MAX(colD) > MIN(colE)
SELECT AVG(colE) FROM test0 GROUP BY colB HAVING COUNT(DISTINCT colA) > MIN(colE)
SELECT AVG(colE) FROM test0 GROUP BY colB HAVING MAX(colD) > COUNT(colD)
SELECT AVG(colE) FROM test0 WHERE colD > 2 GROUP BY colB HAVING MAX(colD) > COUNT(colD) OR MAX(colD) < AVG(colE) AND COUNT(colD) = COUNT(colD) OR COUNT(colD) <> MAX(colD)
SELECT COUNT(DISTINCT colB) FROM test0 GROUP BY colB
SELECT AVG(colE) FROM test0 GROUP BY colB ORDER BY MAX(colD)